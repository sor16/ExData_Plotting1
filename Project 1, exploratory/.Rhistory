2+3
[1 2 3;1 2 3]
x=C(1 2 3;1 2 3)
x = C(1, 2, 3;1, 2, 3)
x=c(1,2,3)
x=c(1;2;3)
help(matrix)
x=matrix(1,2,3;1 2 3)
x=matrix(1 2 3)
x=matrix(1, 2, 3)
x=c(1:10)
y=matrix(3 5 7 9 2 3 4 5 6 6 5 4 3 3 2 2 6 7 8 "String")
y=matrix(3 5 2 4 3 2)
y=matrix(1 2 3)
q()
data
temp<-tempfile()
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip",temp,method="curl")
data=unzip(temp)
head(data)
data
unlink(temp)
test.x=read.table(data[15])
head(test.x)
dim(test.x)
test.y = read.table(data[16])
head(test.y)
length(names(test.x))
data
test.subject=read.table(data[14])
head(test.subject)
dim(test.subject)
head(test.subject,n=50)
tail(test.subject)
as.factor(test.subject)
?factor
class(test.subject)
as.vector(test.subject)
as.factor(test.subject)
as.factor(as.numeric(test.subject))
class(test.subject)
as.factor(as.vector(test.subject[,1]))
mergetest<-merge(test.subject,test.x,test.y,all=TRUE)
mergetest<-merge(test.subject,test.x,test.y,by.x=V1, all=TRUE)
mergetest<-merge(test.subject,test.x,test.y,by.x="V1", all=TRUE)
mergetest<-merge(test.subject,test.x,test.y,by.x="V1",by.y="V1" all=TRUE)
mergetest<-merge(test.subject,test.x,test.y,by.x="V1",by.y="V1", all=TRUE)
head(mergetest)
names(mergetest)
names(test.subject)
mergetest<-merge(test.subject,test.x,by.x="V1",by.y="V1" all=TRUE)
mergetest<-merge(test.subject,test.x,by.x="V1",by.y="V1", all=TRUE)
mergetest
head(mergetest)
mergetest<-merge(test.x,test.y,by.x="V1",by.y="V1" all=TRUE)
mergetest<-merge(test.x,test.y,by.x="V1",by.y="V1",all=TRUE)
head(mergetest)
install.packages(|)
install.packages("dplyr")
library(dplyr)
rename(test.y,activity=V1)
head(rename(test.y,activity=V1))
test.y <-rename(test.y,activity=V1)
mergedTests=merge(test.x,test.y,test.subject,by.x="V1",by.y="activity")
names(mergedTests)
mergedTests=merge(test.x,test.y,by.x="activity",by.y="activity")
mergedTests=merge(test.x,test.y,by.x="activity",by.y="V2")
mergedTests=merge(test.x,test.y,by.x="V1",by.y="activity")
head(mergedTests)
mergedTests=merge(test.x,test.y,by.x="V1",by.y="activity")
mergedTests=merge(test.x,test.y,by.x="V1",by.y="activity", all=T)
head(mergedTests)
head(test.y)
rename(test.y,V1=activity)
head(rename(test.y,V1=activity))
mergedTests=merge(test.x,test.y,by='V1', all.y=T)
temp=tempfile()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv ", temp)
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv ", temp)
data=unzip(temp)
data=read.csv(temp)
temp=tempfile()
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv ", temp)
data=read.csv(temp)
unlink(temp)
datatest=head(data$ACR)
head(data$ACR)
head(data$AGS)
head(data$AGS, na.rm=T)
head(data$AGS, na.rm=TRUE)
head(data$AGS[!is.na(data$AGS)])
which(data$ACR==3 & data$AGS==6)
?jpeg
install.packages("jpeg")
library(jpeg)
temp=tempfile()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",temp)
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",temp)
readJPEG(temp)
photo=readJPEG(temp)
photo=readJPEG(temp,native=TRUE)
?quantile
quantile(photo,c(0.3,0.8))
unlink(temp)
temp=tempfile()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",temp)
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",temp)
grossdata=temp
temp=tempfile
temp=tempfile()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv",temp)
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv",temp)
edudata=temp
grossdata=read.csv(grossdata)
edudata=read.csv(edudata)
head(data)
head(data$ID)
?join
join(grossdata,edudata)
install.packages("plyr")
library(plyr)
join(grossdata,edudata)
View(grossdata)
View(grossdata)
grossdata=grossdata[5:194,]
head(grossdata)
grossdata=grossdata[,c(1,2,4,5)]
head(grossdata)
names(grossdata)="Country","Rank","Economy","GDP"
?names
names(grossdata)=c("Country","Rank","Economy","GDP")
head(grossdata)
grossdata$Rank=as.numeric(as.character(grossdata$Rank))
class(grossdata$Rank)
quantile(photo,c(0.3,0.8))
View(edudata)
View(edudata)
head(edudata)
names(grossdata$Country)=c("CountryCode")
head(grossdata)
names(grossdata)=c("CountryCode")
head(grossdata)
?match
match(grossdata$CountryCode,edudata$CountryCode)
length(match(grossdata$CountryCode,edudata$CountryCode))
length(match(grossdata$CountryCode,edudata$CountryCode,na.rm=T))
length(match(grossdata$CountryCode,edudata$CountryCode,()
MatchID=match(grossdata$CountryCode,edudata$CountryCode)
MatchID=MatchID[!is.na(MatchID)]
MatchID
Length(MatchID)
length(MatchID)
edudata[MatchID[189-12],]
MatchID[177]
MatchID[189-13]
edudata[MatchID[189-13],]
edudata=edudata[1:3,]
head(edudata)
edudata=edudata[,1:3]
temp=tempfile()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv ",temp)
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv ",temp)
edudata=read.csv(temp)
edudata=edudata[,1:3]
head(edudata)
merge(grossdata,edudata)
merge(grossdata,edudata,by.x="CountryCode")
mergeddata=merge(grossdata,edudata,by.y="CountryCode")
head(mergeddata)
tail(mergeddata)
?sort
names(mergeddata)=c("CountryCode","Rank","Economy","GDP")
head(mergeddata)
names(mergeddata)=c("CountryCode","Rank","Economy","GDP",Long.name,Income.group)
names(mergeddata)=c("CountryCode","Rank","Economy","GDP","Long.name","Income.group")
head(mergeddata)
sort(mergeddata$Rank,decreasing=T)
mergeddata$Rank=sort(mergeddata$Rank,decreasing=T)
head(mergeddata)
mergeddata[13,]
mergeddata=merge(grossdata,edudata,by.y="CountryCode")
names(mergeddata)=c("CountryCode","Rank","Economy","GDP","Long.name","Income.group")
head(mergeddata)
library(plyr)
?arrange
arrange(mergeddata,Rank)
mergedsorted=arrange(mergeddata,desc(Rank))
head(mergeedsorted)
head(mergedsorted)
mergedsorted[13,]
?ddply
condenseddata=ddply(mergeddata,.(Income.Group),summarize,FUN=mean)
head(mergeddata)
condenseddata=ddply(mergeddata,"Income.group",summarize,FUN=mean)
condenseddata=ddply(mergeddata,"Income.group",summarize,FUN=mean(GDP))
library(dplyr)
condenseddata=ddply(mergeddata,"Income.group",summarize,FUN=mean(GDP))
head(condenseddata)
condenseddata=ddply(mergeddata,"Income.group",summarize,FUN=mean("GDP"))
condenseddata=ddply(mergeddata,"Income.group",summarize,FUN=mean(mergeddata$GDP))
condenseddata=ddply(mergeddata,"Income.group",summarize,FUN=mean(GDP))
head(condenseddata)
condenseddata=ddply(mergeddata,"Income.group",summarize,mean GDP=mean(GDP))
condenseddata=ddply(mergeddata,"Income.group",summarize,meanGDP=mean(GDP))
head(condenseddata)
condenseddata=ddply(mergeddata,"Income.group",summarize,meanGDP=mean(Rank))
head(condenseddata)
condenseddata=ddply(mergeddata,"Income.group",summarize,Quantilegroup=quantile(c(0.2,0.4,0.6,0.8,1)))
condenseddata=ddply(mergeddata,"Income.group",summarize,Quantilegroup=quantile(mergeddata,c(0.2,0.4,0.6,0.8,1)))
condenseddata=ddply(mergeddata,"Income.group",summarize,Quantilegroup=quantile(mergeddata$GDP,c(0.2,0.4,0.6,0.8,1)))
mergeddata$GDP=as.numeric(as.character(mergeddata$GDP))
head(mergeddata)
mergeddata=merge(grossdata,edudata,by.y="CountryCode")
names(mergeddata)=c("CountryCode","Rank","Economy","GDP","Long.name","Income.group")
mergedsorted=arrange(mergeddata,desc(Rank))
head(mergedsorteddata)
head(mergedsorted)
GDPnumeric=as.numeric(as.character(mergeddata$GDP))
head(GDPnumeric)
tail(mergedsorted)
GDPnumeric=as.numeric(as.character(mergedsorted$GDP))
head(GDPnumeric)
mergedsorted$GDP=GDPnumeric
condenseddata=ddply(mergedsorted,"Income.group",summarize,Quantilegroup=quantile(mergedsorted,c(0.2,0.4,0.6,0.8,1)))
head(condenseddata)
condenseddata1=ddply(mergedsorted,"Income.group",summarize,Quantilegroup=quantile(mergedsorted,c(0.2,0.4,0.6,0.8,1)))
condenseddata1=ddply(mergedsorted,"Income.group",summarize,Quantilegroup=quantile(mergedsorted,c(0.2,0.4,0.6,0.8,1)),na.rm=T)
condenseddata1=ddply(mergedsorted,"Income.group",summarize,Quantilegroup=quantile(mergedsorted,c(0.2,0.4,0.6,0.8,1),na.rm=T))
?quantmod
install.packages("quantmod")
library(quantmod)
?quantmod
?quantile
quantilemerged=quantile(mergedsorted,c(0.2,0.4,0.6,0.8,1))
narm=mergedsorted$GDP[(!is.na(mergedsorted$GDP))]
length(narm)
narm
length(mergedsorted$GDP)
mergedsorted$GDP
mergeddata=merge(grossdata,edudata,by.y="CountryCode")
names(mergeddata)=c("CountryCode","Rank","Economy","GDP","Long.name","Income.group")
mergedsorted=arrange(mergeddata,desc(Rank))
mergedsorted$GDP
levels(mergedsorted$GDP)
GDPnumeric=as.numeric(as.character(gsub(",","",mergedsorted$GDP)
)
)
head(GDPnumeric)
GDPnumeric
mergedsorted$GDP=GDPnumeric
condenseddata1=ddply(mergeddata,"Income.group",summarize,Quantilegroup=quantile(c(0.2,0.4,0.6,0.8,1)))
condenseddata1=ddply(mergedsorted,"Income.group",summarize,Quantilegroup=quantile(mergedsorted,c(0.2,0.4,0.6,0.8,1)))
condenseddata1=ddply(mergedsorted,"Income.group",summarize,Quantilegroup=quantile(mergedsorted$GDP,c(0.2,0.4,0.6,0.8,1)))
quantile(mergedsorted$GDP,0.2)
quantile(mergedsorted$GDP,c(0.2,0.4,0.6,0.8,1)
)
quantilevector=quantile(mergedsorted$GDP,c(0.2,0.4,0.6,0.8,1))
class(quantilevector)
as.vector(quantilevector)
?count
condenseddata1=ddply(mergedsorted,.(Income.group),function(x) quantile(mergedsorted$GDP))
condenseddata1
condenseddata1=ddply(mergedsorted,.(Income.group),function(x) quantile(GDP,c(0.2,0.4,0.6,0.8,1)))
condenseddata1=ddply(mergedsorted,.(Income.group),function(x) quantile(mergedsorted$GDP,c(0.2,0.4,0.6,0.8,1)))
condenseddata1
head(mergedsorted)
mergedsorted[mergedsorted$GDP>262291]
mergedsorted[,mergedsorted$GDP>262291]
mergedsorted[mergedsorted$GDP>262291,]
length(mergedsorted[mergedsorted$GDP>262291 & mergedsorted$Income.Group="Lower middle income",])
length(mergedsorted[mergedsorted$GDP>262291 & mergedsorted$Income.Group=="Lower middle income",])
length(mergedsorted[mergedsorted$GDP>=262291 & mergedsorted$Income.Group=="Lower middle income",])
length(mergedsorted[mergedsorted$Rank<39 & mergedsorted$Income.Group=="Lower middle income",])
length(mergedsorted[mergedsorted$Rank<39,])
mergeddata$Rank
head(mergedsorted)
Ranknumeric=as.numeric(as.character(mergedsorted$Rank))
Ranknumeric
mergedsorted$Rank=Ranknumeric
length(mergedsorted[mergedsorted$Rank<39 & mergedsorted$Income.Group=="Lower middle income",])
mergedsorted$Rank<39
mergedsorted$Rank<39 & mergedsorted$Income.Group=="Lower middle income"
mergedsorted$Rank<39 && mergedsorted$Income.Group=="Lower middle income"
mergedsorted$Rank<39 & mergedsorted$Income.Group=="Lower middle income"
^i think
?POSIXlt
temp=tempfile()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",temp, method="curl")
data=read.csv(temp)
unlink(temp)
head(data,1)
data1=data[,grep("wgtp",names(data))]
head(data1)
Splitnames=strsplit(names(data1),"\\[0-9]")
class(Splitnames)
Splitnames[[123]]
Splitnames[123]
Splitnames
Splitnames=strsplit(names(data1),"\\wgtp")
Splitnames
gsub("t","t.",names(data1))
gsub("t.","t",names(data1))
gsub("t","tp",names(data1))
gsub(pp,"p",names(data1))
gsub("pp","p",names(data1))
gsub("p","p.",names(data1))
Splitnames=strsplit(names(data1),"\\.")
class(Splitnames)
Splitnames[62[1]]
head(Splitnames)
names(data1)=gsub("p","p.",names(data1))
names(data1)
Splitnames=strsplit(names(data1),"\\.")
head(Splitnames)
Splitnames[123]
Splitnames[[61]]
strsplit(names(data),wgtp)
strsplit(names(data),\\wgtp)
strsplit(names(data),"\\wgtp")
Stringsplit=strsplit(names(data),"\\wgtp")
Stringsplit[[123]]
temp=tempfile()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",temp,method="curl" )
grossdata=read.csv(temp)
unlink(temp)
grossdataGDP=gsub(",","",grossdata$GDP)
head(grossdataGDP)
names(grossdata)
head(grossdata)
grossdata1=grossdata[,1:2&4:5]
head(grossdata)
grossdata1=grossdata[,c(1,2,4,5)]
head(grossdata)
head(grossdata1)
names(grossdata1)=c("CountryCode","Rank","Economy","GDP")
grossdata1=grossdata[c(5:nrows(grossdata1)),]
grossdata1=grossdata[c(5:330,]
grossdata1=grossdata[c(5:330),]
head(grossdata1)
grossdata1=grossdata1[c(5:330),c(1,2,4,5)]
names(grossdata1)=c("CountryCode","Rank","Economy","GDP")
head(grossdata)
head(grossdata1)
grossGDP=gsub(",","",grossdata$GDP)
head(grossGDP,10)
grossGDP=gsub(",","",grossdata1$GDP)
head(grossGDP,10)
grossdata1=grossdata[c(1:330),c(1,2,4,5)]
head(grossdata1)
grossdata1=grossdata1[c(5:330),]
head(grossdata1)
grossGDP=gsub(",","",grossdata1$X.3)
head(grossGDP)
mean(grossGDP)
grossGDP1as.numeric(as.character(grossGDP))
grossGDP1=as.numeric(as.character(grossGDP))
head(grossGDP,14)
class(grossGDP)
grossGDP1=as.numeric(grossGDP)
tail(grossGDP,14)
grossGDP
tail(grossdata)
tail(grossdata,50)
tail(grossdata,100)
tail(grossdata,200)
grossdata1=grossdata1[c(5:235),]
grossGDP=gsub(",","",grossdata1$X.3)
head(grossGDP)
mean(grossGDP)
grossGDP
grossGDP[c(1:186,213,215:227]
grossGDP[c(1:186,213,215:227)]
grossGDP=grossGDP[c(1:186,213,215:227)]
mean(grossGDP)
mean(as.numeric(grossGDP))
grossdata[5:192,c(1,2,4,5)]
grossdata2=grossdata[5:192,c(1,2,4,5)]
grossGDP=gsub(",","",grossdata2$X.3)
mean(as.numeric(grossGDP))
grossdata2=grossdata[5:196,c(1,2,4,5)]
grossGDP=gsub(",","",grossdata2$X.3)
grossdata2=grossdata[5:194,c(1,2,4,5)]
grossGDP=gsub(",","",grossdata2$X.3)
mean(as.numeric(grossGDP))
names(grossdata2)=c("CountryCode","Rank","CountryNames","GDP")
grep("^United",grossdata2$CountryNames)
temp=tempfile()
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv",temp)
edudata=read.csv(temp)
unlink(temp)
head(edudata)
edudata1=edudata[c(1,10),]
edudata1=edudata[,c(1,10)]
names(edudata1)=c("CountryCode","Fiscal")
merge(grossdata2,edudata1,by.y="CountryCode")
?grep()
mergeddata=merge(grossdata2,edudata1,by.y="CountryCode")
greppeddata=grep("Fiscal",mergeddata)
View(grossdata2)
greppeddata=grep("Fiscal+(.*)+June",mergeddata)
head(greppeddata)
greppeddata=grep("Fiscal+(.*)+June",mergeddata[,5])
head(greppeddata)
greppeddata=grep("Fiscal+(.*)+June",mergeddata[,5], value=T)
head(greppeddata)\
head(greppeddata)
length(greppeddata)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
head(sampleTimes)
sampleDates=as.Date(sampleTimes)
sample=format(sampleDates,"%Y %a")
head(sample)
length(grep("2012",sample)
)
length(grep("2012+Mon",sample)
)
length(grep("2012+ +Mon",sample)
)
choose(15,10)
for(i in 0:5) {
x=choose(15-i,10+i)*((0.49)^(10+i))*((0.51)^(5-i))
x
}
x
for(i in 0:5) {
x=choose(15-i,10+i)*((0.49)^(10+i))*((0.51)^(5-i))
}
x
x=0
for(i in 0:5) {
x=x+choose(15-i,10+i)*((0.49)^(10+i))*((0.51)^(5-i))
}
x
for(i in 1:5) {
x=x+choose(15-i,10+i)*((0.49)^(10+i))*((0.51)^(5-i))
}
x
for(i in 0:5) {
x=x+choose(15-i,11+i)*((0.49)^(11+i))*((0.51)^(4-i))
}
x
x=o
x=0
for(i in 0:5) {
x=x+choose(15-i,11+i)*((0.49)^(11+i))*((0.51)^(4-i))
}
x
x=0
for(i in 0:4) {
x=x+choose(15-i,11+i)*((0.49)^(11+i))*((0.51)^(4-i))
}
x
